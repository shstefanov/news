var fs = require('fs');
var Iconv = require('iconv').Iconv;


function DataManager() { //(container[], put(a) )
    this.container = new Array();
    this.put = function (request, something) {
        this.container.push(something);
    }
}

function Client(hostname) {
    var http = require("http");
    var host = hostname;
    var request;
    var data;
    var instance = http.createClient(80, host);
    this.get = function (req, callback) {
        request = instance.request('GET', req, {
            'host': host
        }); //req - the request
        request.end();
        request.on('response', function (response) {
        		
            response.on('data', function (chunk) {
                data+=chunk;
            });
            response.on('end', function () {
                DM.put(req, data);
				
				callback(data);
             });
        });
    }
}

function FileManager(dir) {

	this.home = dir; //Setting the home variable
	this.list = dir_map(dir); //Initialize the map of the directory
	
	function dir_map(path) { //Recursive function
	
		var dirlist =  fs.readdirSync(path);
		
		
		for (var idx in dirlist) {
			
			var name = dirlist[idx];
			p = path + '/' + dirlist[idx];
			d = dirlist[idx];
			if (fs.statSync(p).isDirectory()){
				
				
				dirlist[idx] = dir_map(p);
				dirlist[idx].type = 'directory';
				dirlist[idx].name = name;
			}
			else {
				
				dirlist[idx].type = 'file';
				dirlist[idx].name = name;
			}
		}
		
		return dirlist;
	}
		
	this.write = function (path, filename, data){
			var f = fs.createWriteStream(path + '/' + filename);
		f.write(data);
	}
	
	
}

function DatabaseManager() {

}

function EventBus() {

}



//------------------------------------------------------------------------//

var FM = new FileManager('./store');

var DM = new DataManager();
var CL = new Client('focus-news.net');
CL.get('/?id=nt&where=1&zone=-1', function (data){
	
	
	var iconv = new Iconv('utf8','cp1251');
	var data2 = iconv.convert(data);
	FM.write('./store', 'data2.html', data2);
	
});





